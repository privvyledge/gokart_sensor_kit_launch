<!--
Todo:
  * move to "common_sensor_launch" and name it imu_corrector.launch.xml, then refactor and make this launch file spawn for multiple IMUs, i.e
  LIVOX LIDAR IMU, 4x ZED 2i IMUs, and Yahboom IMU.
  * Also could add IMU filter before to get orientation data from IMU
  * Launch imu_tools as a component (imu_filter_madgwick only)
  -->
<launch>
  <arg name="autoware_launch" default="false" description="Whether to launch nodes for use with Autoware or not."/>
  <arg name="launch_driver" default="true"/>
  <arg name="port" default="/dev/imu_usb"/>
  <arg name="imu_driver" default="yahboom"/>
  <arg name="imu_frame_id" default="imu_link"/>
  <arg name="baudrate" default="921600"/>

  <group>
    <push-ros-namespace namespace="imu"/>

    <!-- Switch topic name -->
<!--    <let name="imu_topic_name" value="data" if="$(var filter_imu)"/>-->
<!--    <let name="imu_topic_name" value="data_raw" unless="$(var filter_imu)"/>-->

    <!-- Yahboom IMU launch -->
    <group>
      <push-ros-namespace namespace="$(var imu_driver)"/>
      <node pkg="wit_ros2_imu" name="$(var imu_driver)_imu_driver" exec="wit_ros2_imu" if="$(var launch_driver)">
<!--        <remap from="imu/data_raw" to="imu_raw"/>-->
        <param name="port" value="$(var port)"/>
        <param name="imu_frame_id" value="$(var imu_frame_id)"/>
        <param name="baud" value="$(var baudrate)" />
      </node>

      <include file="$(find-pkg-share common_sensor_launch)/launch/imu_corrector.launch.xml">
        <arg name="autoware_launch" value="$(var autoware_launch)"/>
        <arg name="imu_driver" value="yahboom"/>
  <!--      <arg name="imu_topic" value="imu/data_raw"/>-->
        <arg name="filter_imu" value="false"/>
        <arg name="use_mag" value="false"/>
      </include>
    </group>

    <!-- LIVOX HAP IMU launch -->
    <group>
      <push-ros-namespace namespace="livox_hap"/>

      <include file="$(find-pkg-share common_sensor_launch)/launch/imu_corrector.launch.xml">
        <arg name="autoware_launch" value="$(var autoware_launch)"/>
        <arg name="imu_driver" value="livox"/>
        <arg name="imu_topic" value="/lidar/top/livox/imu"/>
        <arg name="filter_imu" value="true"/>
        <arg name="use_mag" value="false"/>
      </include>
    </group>

    <!-- ZED front IMU launch -->
    <group>
      <push-ros-namespace namespace="zed_front"/>

      <include file="$(find-pkg-share common_sensor_launch)/launch/imu_corrector.launch.xml">
        <arg name="autoware_launch" value="$(var autoware_launch)"/>
        <arg name="imu_driver" value="zed"/>
        <arg name="imu_topic" value="/lidar/front/zed_front/zed_node/imu/data"/>
        <arg name="filter_imu" value="true"/>
        <arg name="use_mag" value="false"/>
      </include>
    </group>

<!--    <group  if="$(var autoware_launch)" >-->
<!--      <arg name="vehicle_id" default="default"/>-->
<!--      <arg name="imu_raw_name" default="$(var imu_driver)/imu_raw"/>-->
<!--      <arg name="imu_corrector_param_file" default="$(find-pkg-share individual_params)/config/$(var vehicle_id)/sample_sensor_kit/imu_corrector.param.yaml"/>-->

<!--      <include file="$(find-pkg-share imu_corrector)/launch/imu_corrector.launch.xml">-->
<!--        <arg name="input_topic" value="$(var imu_raw_name)"/>-->
<!--        <arg name="output_topic" value="imu_data"/>-->
<!--        <arg name="param_file" value="$(var imu_corrector_param_file)"/>-->
<!--      </include>-->

<!--      <include file="$(find-pkg-share imu_corrector)/launch/gyro_bias_estimator.launch.xml">-->
<!--        <arg name="input_imu_raw" value="$(var imu_raw_name)"/>-->
<!--        <arg name="input_odom" value="/localization/kinematic_state"/>-->
<!--        <arg name="imu_corrector_param_file" value="$(var imu_corrector_param_file)"/>-->
<!--      </include>-->
<!--    </group>-->
  </group>
</launch>
